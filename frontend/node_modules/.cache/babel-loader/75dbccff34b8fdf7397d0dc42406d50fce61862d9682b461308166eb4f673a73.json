{"ast":null,"code":"var _jsxFileName = \"/Users/maneadamyan/Desktop/Capstone/frontend/src/pages/BoardPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport '../styles/main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardPage = () => {\n  _s();\n  const {\n    user,\n    logout\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [boardName, setBoardName] = useState('My Board');\n  const [columns, setColumns] = useState([{\n    id: 1,\n    name: 'To Do',\n    tasks: []\n  }, {\n    id: 2,\n    name: 'In Progress',\n    tasks: []\n  }, {\n    id: 3,\n    name: 'Done',\n    tasks: []\n  }]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    if (!user) {\n      navigate('/login');\n    } else {\n      // Load board data here if needed\n      setIsLoading(false);\n    }\n  }, [user, navigate]);\n  const addTask = (columnId, taskContent) => {\n    if (!taskContent.trim()) return;\n    setColumns(prevColumns => prevColumns.map(column => column.id === columnId ? {\n      ...column,\n      tasks: [...column.tasks, {\n        id: Date.now(),\n        content: taskContent,\n        createdAt: new Date().toISOString()\n      }]\n    } : column));\n  };\n  const moveTask = (taskId, fromColumnId, toColumnId) => {\n    setColumns(prevColumns => {\n      const newColumns = [...prevColumns];\n      const fromColumn = newColumns.find(col => col.id === fromColumnId);\n      const toColumn = newColumns.find(col => col.id === toColumnId);\n      const taskIndex = fromColumn.tasks.findIndex(task => task.id === taskId);\n      if (taskIndex === -1) return prevColumns;\n      const [movedTask] = fromColumn.tasks.splice(taskIndex, 1);\n      toColumn.tasks.push(movedTask);\n      return newColumns;\n    });\n  };\n  const handleLogout = () => {\n    logout();\n    navigate('/login');\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\",\n      children: \"Loading board...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"board-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"board-title\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: boardName,\n            onChange: e => setBoardName(e.target.value),\n            className: \"board-name-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"welcome-message\",\n          children: [\"Welcome, \", user === null || user === void 0 ? void 0 : user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"logout-btn\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-columns-container\",\n      children: columns.map(column => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"column-title\",\n            children: column.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"task-count\",\n            children: [column.tasks.length, \" tasks\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tasks-list\",\n          children: column.tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-card\",\n            draggable: true,\n            onDragStart: e => {\n              e.dataTransfer.setData('taskId', task.id);\n              e.dataTransfer.setData('fromColumnId', column.id);\n            },\n            onDragOver: e => e.preventDefault(),\n            onDrop: e => {\n              e.preventDefault();\n              const taskId = Number(e.dataTransfer.getData('taskId'));\n              const fromColumnId = Number(e.dataTransfer.getData('fromColumnId'));\n              if (fromColumnId !== column.id) {\n                moveTask(taskId, fromColumnId, column.id);\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-content\",\n              children: task.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-date\",\n              children: new Date(task.createdAt).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-task-btn\",\n          onClick: () => {\n            const taskContent = prompt('Enter task content:');\n            if (taskContent) {\n              addTask(column.id, taskContent);\n            }\n          },\n          children: \"+ Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)]\n      }, column.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(BoardPage, \"6Vpyko2ss+oeRnre5TDBA+qMJw0=\", false, function () {\n  return [useNavigate];\n});\n_c = BoardPage;\nexport default BoardPage;\nvar _c;\n$RefreshReg$(_c, \"BoardPage\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useNavigate","AuthContext","jsxDEV","_jsxDEV","BoardPage","_s","user","logout","navigate","boardName","setBoardName","columns","setColumns","id","name","tasks","isLoading","setIsLoading","addTask","columnId","taskContent","trim","prevColumns","map","column","Date","now","content","createdAt","toISOString","moveTask","taskId","fromColumnId","toColumnId","newColumns","fromColumn","find","col","toColumn","taskIndex","findIndex","task","movedTask","splice","push","handleLogout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","length","draggable","onDragStart","dataTransfer","setData","onDragOver","preventDefault","onDrop","Number","getData","toLocaleDateString","prompt","_c","$RefreshReg$"],"sources":["/Users/maneadamyan/Desktop/Capstone/frontend/src/pages/BoardPage.jsx"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport '../styles/main.css';\n\nconst BoardPage = () => {\n  const { user, logout } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [boardName, setBoardName] = useState('My Board');\n  const [columns, setColumns] = useState([\n    { id: 1, name: 'To Do', tasks: [] },\n    { id: 2, name: 'In Progress', tasks: [] },\n    { id: 3, name: 'Done', tasks: [] }\n  ]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (!user) {\n      navigate('/login');\n    } else {\n      // Load board data here if needed\n      setIsLoading(false);\n    }\n  }, [user, navigate]);\n\n  const addTask = (columnId, taskContent) => {\n    if (!taskContent.trim()) return;\n    \n    setColumns(prevColumns => \n      prevColumns.map(column => \n        column.id === columnId\n          ? {\n              ...column,\n              tasks: [\n                ...column.tasks,\n                {\n                  id: Date.now(),\n                  content: taskContent,\n                  createdAt: new Date().toISOString()\n                }\n              ]\n            }\n          : column\n      )\n    );\n  };\n\n  const moveTask = (taskId, fromColumnId, toColumnId) => {\n    setColumns(prevColumns => {\n      const newColumns = [...prevColumns];\n      const fromColumn = newColumns.find(col => col.id === fromColumnId);\n      const toColumn = newColumns.find(col => col.id === toColumnId);\n      \n      const taskIndex = fromColumn.tasks.findIndex(task => task.id === taskId);\n      if (taskIndex === -1) return prevColumns;\n      \n      const [movedTask] = fromColumn.tasks.splice(taskIndex, 1);\n      toColumn.tasks.push(movedTask);\n      \n      return newColumns;\n    });\n  };\n\n  const handleLogout = () => {\n    logout();\n    navigate('/login');\n  };\n\n  if (isLoading) {\n    return <div className=\"loading-spinner\">Loading board...</div>;\n  }\n\n  return (\n    <div className=\"board-page\">\n      <header className=\"board-header\">\n        <div className=\"board-info\">\n          <h1 className=\"board-title\">\n            <input\n              type=\"text\"\n              value={boardName}\n              onChange={(e) => setBoardName(e.target.value)}\n              className=\"board-name-input\"\n            />\n          </h1>\n          <p className=\"welcome-message\">Welcome, {user?.name}</p>\n        </div>\n        <button onClick={handleLogout} className=\"logout-btn\">\n          Logout\n        </button>\n      </header>\n\n      <div className=\"board-columns-container\">\n        {columns.map(column => (\n          <div key={column.id} className=\"board-column\">\n            <div className=\"column-header\">\n              <h3 className=\"column-title\">{column.name}</h3>\n              <span className=\"task-count\">{column.tasks.length} tasks</span>\n            </div>\n            \n            <div className=\"tasks-list\">\n              {column.tasks.map(task => (\n                <div \n                  key={task.id} \n                  className=\"task-card\"\n                  draggable\n                  onDragStart={(e) => {\n                    e.dataTransfer.setData('taskId', task.id);\n                    e.dataTransfer.setData('fromColumnId', column.id);\n                  }}\n                  onDragOver={(e) => e.preventDefault()}\n                  onDrop={(e) => {\n                    e.preventDefault();\n                    const taskId = Number(e.dataTransfer.getData('taskId'));\n                    const fromColumnId = Number(e.dataTransfer.getData('fromColumnId'));\n                    if (fromColumnId !== column.id) {\n                      moveTask(taskId, fromColumnId, column.id);\n                    }\n                  }}\n                >\n                  <div className=\"task-content\">{task.content}</div>\n                  <div className=\"task-date\">\n                    {new Date(task.createdAt).toLocaleDateString()}\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            <button\n              className=\"add-task-btn\"\n              onClick={() => {\n                const taskContent = prompt('Enter task content:');\n                if (taskContent) {\n                  addTask(column.id, taskContent);\n                }\n              }}\n            >\n              + Add Task\n            </button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default BoardPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC9D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,wBAAwB;AACpD,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC,IAAI;IAAEC;EAAO,CAAC,GAAGT,UAAU,CAACG,WAAW,CAAC;EAChD,MAAMO,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,UAAU,CAAC;EACtD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,CACrC;IAAEgB,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAG,CAAC,EACnC;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,aAAa;IAAEC,KAAK,EAAE;EAAG,CAAC,EACzC;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAG,CAAC,CACnC,CAAC;EACF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAEhDE,SAAS,CAAC,MAAM;IACd,IAAI,CAACO,IAAI,EAAE;MACTE,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,MAAM;MACL;MACAS,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,CAACX,IAAI,EAAEE,QAAQ,CAAC,CAAC;EAEpB,MAAMU,OAAO,GAAGA,CAACC,QAAQ,EAAEC,WAAW,KAAK;IACzC,IAAI,CAACA,WAAW,CAACC,IAAI,CAAC,CAAC,EAAE;IAEzBT,UAAU,CAACU,WAAW,IACpBA,WAAW,CAACC,GAAG,CAACC,MAAM,IACpBA,MAAM,CAACX,EAAE,KAAKM,QAAQ,GAClB;MACE,GAAGK,MAAM;MACTT,KAAK,EAAE,CACL,GAAGS,MAAM,CAACT,KAAK,EACf;QACEF,EAAE,EAAEY,IAAI,CAACC,GAAG,CAAC,CAAC;QACdC,OAAO,EAAEP,WAAW;QACpBQ,SAAS,EAAE,IAAIH,IAAI,CAAC,CAAC,CAACI,WAAW,CAAC;MACpC,CAAC;IAEL,CAAC,GACDL,MACN,CACF,CAAC;EACH,CAAC;EAED,MAAMM,QAAQ,GAAGA,CAACC,MAAM,EAAEC,YAAY,EAAEC,UAAU,KAAK;IACrDrB,UAAU,CAACU,WAAW,IAAI;MACxB,MAAMY,UAAU,GAAG,CAAC,GAAGZ,WAAW,CAAC;MACnC,MAAMa,UAAU,GAAGD,UAAU,CAACE,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACxB,EAAE,KAAKmB,YAAY,CAAC;MAClE,MAAMM,QAAQ,GAAGJ,UAAU,CAACE,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACxB,EAAE,KAAKoB,UAAU,CAAC;MAE9D,MAAMM,SAAS,GAAGJ,UAAU,CAACpB,KAAK,CAACyB,SAAS,CAACC,IAAI,IAAIA,IAAI,CAAC5B,EAAE,KAAKkB,MAAM,CAAC;MACxE,IAAIQ,SAAS,KAAK,CAAC,CAAC,EAAE,OAAOjB,WAAW;MAExC,MAAM,CAACoB,SAAS,CAAC,GAAGP,UAAU,CAACpB,KAAK,CAAC4B,MAAM,CAACJ,SAAS,EAAE,CAAC,CAAC;MACzDD,QAAQ,CAACvB,KAAK,CAAC6B,IAAI,CAACF,SAAS,CAAC;MAE9B,OAAOR,UAAU;IACnB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMW,YAAY,GAAGA,CAAA,KAAM;IACzBtC,MAAM,CAAC,CAAC;IACRC,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,IAAIQ,SAAS,EAAE;IACb,oBAAOb,OAAA;MAAK2C,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChE;EAEA,oBACEhD,OAAA;IAAK2C,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzB5C,OAAA;MAAQ2C,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC9B5C,OAAA;QAAK2C,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB5C,OAAA;UAAI2C,SAAS,EAAC,aAAa;UAAAC,QAAA,eACzB5C,OAAA;YACEiD,IAAI,EAAC,MAAM;YACXC,KAAK,EAAE5C,SAAU;YACjB6C,QAAQ,EAAGC,CAAC,IAAK7C,YAAY,CAAC6C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAC9CP,SAAS,EAAC;UAAkB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACLhD,OAAA;UAAG2C,SAAS,EAAC,iBAAiB;UAAAC,QAAA,GAAC,WAAS,EAACzC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEQ,IAAI;QAAA;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC,eACNhD,OAAA;QAAQsD,OAAO,EAAEZ,YAAa;QAACC,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAC;MAEtD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEThD,OAAA;MAAK2C,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EACrCpC,OAAO,CAACY,GAAG,CAACC,MAAM,iBACjBrB,OAAA;QAAqB2C,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3C5C,OAAA;UAAK2C,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5B5C,OAAA;YAAI2C,SAAS,EAAC,cAAc;YAAAC,QAAA,EAAEvB,MAAM,CAACV;UAAI;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC/ChD,OAAA;YAAM2C,SAAS,EAAC,YAAY;YAAAC,QAAA,GAAEvB,MAAM,CAACT,KAAK,CAAC2C,MAAM,EAAC,QAAM;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5D,CAAC,eAENhD,OAAA;UAAK2C,SAAS,EAAC,YAAY;UAAAC,QAAA,EACxBvB,MAAM,CAACT,KAAK,CAACQ,GAAG,CAACkB,IAAI,iBACpBtC,OAAA;YAEE2C,SAAS,EAAC,WAAW;YACrBa,SAAS;YACTC,WAAW,EAAGL,CAAC,IAAK;cAClBA,CAAC,CAACM,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAErB,IAAI,CAAC5B,EAAE,CAAC;cACzC0C,CAAC,CAACM,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEtC,MAAM,CAACX,EAAE,CAAC;YACnD,CAAE;YACFkD,UAAU,EAAGR,CAAC,IAAKA,CAAC,CAACS,cAAc,CAAC,CAAE;YACtCC,MAAM,EAAGV,CAAC,IAAK;cACbA,CAAC,CAACS,cAAc,CAAC,CAAC;cAClB,MAAMjC,MAAM,GAAGmC,MAAM,CAACX,CAAC,CAACM,YAAY,CAACM,OAAO,CAAC,QAAQ,CAAC,CAAC;cACvD,MAAMnC,YAAY,GAAGkC,MAAM,CAACX,CAAC,CAACM,YAAY,CAACM,OAAO,CAAC,cAAc,CAAC,CAAC;cACnE,IAAInC,YAAY,KAAKR,MAAM,CAACX,EAAE,EAAE;gBAC9BiB,QAAQ,CAACC,MAAM,EAAEC,YAAY,EAAER,MAAM,CAACX,EAAE,CAAC;cAC3C;YACF,CAAE;YAAAkC,QAAA,gBAEF5C,OAAA;cAAK2C,SAAS,EAAC,cAAc;cAAAC,QAAA,EAAEN,IAAI,CAACd;YAAO;cAAAqB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAClDhD,OAAA;cAAK2C,SAAS,EAAC,WAAW;cAAAC,QAAA,EACvB,IAAItB,IAAI,CAACgB,IAAI,CAACb,SAAS,CAAC,CAACwC,kBAAkB,CAAC;YAAC;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3C,CAAC;UAAA,GApBDV,IAAI,CAAC5B,EAAE;YAAAmC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAqBT,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENhD,OAAA;UACE2C,SAAS,EAAC,cAAc;UACxBW,OAAO,EAAEA,CAAA,KAAM;YACb,MAAMrC,WAAW,GAAGiD,MAAM,CAAC,qBAAqB,CAAC;YACjD,IAAIjD,WAAW,EAAE;cACfF,OAAO,CAACM,MAAM,CAACX,EAAE,EAAEO,WAAW,CAAC;YACjC;UACF,CAAE;UAAA2B,QAAA,EACH;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GA5CD3B,MAAM,CAACX,EAAE;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA6Cd,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC9C,EAAA,CA1IID,SAAS;EAAA,QAEIJ,WAAW;AAAA;AAAAsE,EAAA,GAFxBlE,SAAS;AA4If,eAAeA,SAAS;AAAC,IAAAkE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}